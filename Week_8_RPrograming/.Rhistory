model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "predict")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
pre
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
pre
sum(pre$Success=="TRUE")/dim(pre)[1]
predict(model, test_df[, -1], interval = "confidence")
test_df[, 1] - predict(model, test_df[, -1], interval = "confidence")
test_df[, 1] - predict(model, test_df[, -1])
sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2}))
sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1] - 1
sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
pre <- predict(model, test_modedl = carDF, interval = "predict")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sum(pre$Success=="TRUE")/dim(pre)[1]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)
pre <- predict(model, test_modedl = carDF, interval = "predict")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / (dim(carDF)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
pre <- predict(model, test_modedl = carDF, interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(1)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(2)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
boxplot(log(carDF$sell_price))
boxplot(carDF[,i],main=colnames(carDF)[i])
par(mfrow=c(3,5))
for(i in 1:13){
boxplot(carDF[,i],main=colnames(carDF)[i])
}
par(mfrow=c(3,2))
boxplot(carDF$sell_price)
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(1,1))
par(mfrow=c(3,2))
boxplot(carDF$sell_price)
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(3,2))
boxplot(log(carDF$sell_price))
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price))
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price), names = 'sell_price')
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price), main = 'sell_price')
boxplot(carDF$mielage)
boxplot(carDF$hp)
boxplot(carDF$torque)
boxplot(carDF$displacement)
boxplot(carDF$wt)
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price), main = 'sell_price')
boxplot(carDF$mielage, main = 'mielage')
boxplot(carDF$hp, main = 'hp')
boxplot(carDF$torque, main = 'torque')
boxplot(carDF$displacement, main = 'displacement')
boxplot(carDF$wt, main = 'wt')
hist(carDF$brand, main = 'mielage')
par(mfrow=c(2,3))
hist(carDF$brand, main = 'mielage')
hist(carDF$brand)
plot(carDF$brand, main = 'mielage')
par(mfrow=c(2,3))
plot(carDF$brand, main = 'brand')
plot(carDF$year, main = 'year')
plot(carDF$type, main = 'type')
plot(carDF$fuel_type, main = 'fuel_type')
plot(carDF$LPG, main = 'LPG')
plot(carDF$hybrid, main = 'hybrid')
plot(carDF$transmission_type, main = 'transmission_type')
par(mfrow=c(2,4))
plot(carDF$brand, main = 'brand')
plot(carDF$year, main = 'year')
plot(carDF$type, main = 'type')
plot(carDF$fuel_type, main = 'fuel_type')
plot(carDF$LPG, main = 'LPG')
plot(carDF$hybrid, main = 'hybrid')
plot(carDF$transmission_type, main = 'transmission_type')
par(mfrow=c(2,4))
plot(carDF$brand, main = 'brand') + theme_bw()
library(ggplot2)
par(mfrow=c(2,4))
ggplot(carDF$brand, main = 'brand') + theme_bw()
plot(carDF$brand, main = 'brand') + theme_bw() + geom_bar( )
plot(carDF$year, main = 'year')
plot(carDF$type, main = 'type')
plot(carDF$fuel_type, main = 'fuel_type')
plot(carDF$LPG, main = 'LPG')
plot(carDF$hybrid, main = 'hybrid')
plot(carDF$transmission_type, main = 'transmission_type')
par(mfrow=c(2,4))
plot(carDF$brand, main = 'brand') + theme_bw() + geom_bar( )
plot(carDF$year, main = 'year')
plot(carDF$type, main = 'type')
plot(carDF$fuel_type, main = 'fuel_type')
plot(carDF$LPG, main = 'LPG')
plot(carDF$hybrid, main = 'hybrid')
plot(carDF$transmission_type, main = 'transmission_type')
par(mfrow=c(2,4))
plot(carDF$brand, main = 'brand') + theme_bw() + geom_histogram()
plot(carDF$year, main = 'year')
plot(carDF$type, main = 'type')
plot(carDF$fuel_type, main = 'fuel_type')
plot(carDF$LPG, main = 'LPG')
plot(carDF$hybrid, main = 'hybrid')
plot(carDF$transmission_type, main = 'transmission_type')
ggplot(carDF$brand, main = 'brand') + theme_bw() + geom_histogram()
par(mfrow=c(2,4))
ggplot(carDF$brand, main = 'brand') + theme_bw() + geom_bar( )
ggplot(carDF$brand, main = 'brand')
ggplot(carDF$brand)
plot(carDF$type, main = 'type')
ggplot(data = carDF, mapping = aes(x = brand, y = brand))
ggplot(data = carDF, mapping = aes(x = brand))
ggplot(data = carDF, mapping = aes(x = brand, y = brand)) + theme_bw()
ggplot(data = carDF, mapping = aes(brand)) + theme_bw()
ggplot(data = carDF, aes(brand)) + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar() + theme_bw()
ggplot(data = carDF, aes(year)) + geom_bar() + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar() + theme_gray()
ggplot(data = carDF, aes(brand)) + geom_bar() + theme_bw()
ggplot(data = carDF, aes(brand, color = class)) + geom_bar() + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(stat='identity') + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(stat='identity') + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=categorical variable)) + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=categorical variable)) + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=categorical variable) + theme_bw()
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
outs <- boxplot(log(carDF$sell_price), main = 'sell_price')
outs
outs <- boxplot(log(carDF$sell_price), main = 'sell_price')
ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
par(mfrow=c(2,4))
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()
ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()
ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()
ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()
ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()
par(mfrow=c(2,4))
ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()
ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()
ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()
ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()
ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()
par(mfrow=c(1,1))
g1 <- ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
g2 <- ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
g3 <- ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()
g4 <- ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()
g5 <- ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()
g6 <- ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()
g7 <- ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()
g1 + g2
library(patchwork)
library(patchwork)
library(tidyverse)
g1 + g2
g1 + g2 + g3 / g4 + g5 + + g6
g1 + g2 + g3 / g4 + g5 + g6
(g1 + g2 + g3) / (g4 + g5 + g6)
(g1 + g2 + g3) / (g4 + g5 + g6 + g7)
(g1 + g2) / (g3 + g4) / (g5 + g6 + g7)
g1 <- ggplot(data = carDF, aes(sell_price)) + geom_boxplot(aes(fill=sell_price)) + theme_bw()
g1 <- ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
ggplot(data = carDF, aes(sell_price)) + geom_boxplot(aes(fill=sell_price)) + theme_bw()
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price), main = 'sell_price')
boxplot(carDF$mielage, main = 'mielage')
boxplot(carDF$hp, main = 'hp')
boxplot(carDF$torque, main = 'torque')
boxplot(carDF$displacement, main = 'displacement')
boxplot(carDF$wt, main = 'wt')
(g1 + g2) / (g3 + g4) / (g5 + g6 + g7)
carDF <- carDF[log(carDF$sell_price) < 9]
carDF <- carDF[log(carDF$sell_price) < 9, ]
carDF
boxplot(log(carDF$sell_price), main = 'sell_price')
g1 <- ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
g2 <- ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
g3 <- ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()
g4 <- ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()
g5 <- ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()
g6 <- ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()
g7 <- ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()
(g1 + g2) / (g3 + g4) / (g5 + g6 + g7)
model <- lm(sell_price~., data = carDF)
summary(model)
library(VIM)
library(leaps)
library(psych)
library(car)
library(ggplot2)
library(patchwork)
library(tidyverse)
carDF <- read.csv('car_price.csv', fileEncoding = 'cp949', encoding = 'cp949')
head(carDF)
carDF[sapply(carDF, is.character)] <- lapply(carDF[sapply(carDF, is.character)], as.factor)
carDF$year <- as.factor(carDF$year)
carDF$LPG <- as.factor(carDF$LPG)
carDF$hybrid <- as.factor(carDF$hybrid)
str(carDF)
dim(carDF)
VIM::aggr(carDF)
carDF <- na.omit(carDF)
dim(carDF)
VIM::aggr(carDF)
hist(carDF$sell_price)
qqnorm(carDF$sell_price)
hist(log(carDF$sell_price))
qqnorm(log(carDF$sell_price))
shapiro.test(log(carDF$sell_price))
par(mfrow=c(2,3))
boxplot(log(carDF$sell_price), main = 'sell_price')
boxplot(carDF$mielage, main = 'mielage')
boxplot(carDF$hp, main = 'hp')
boxplot(carDF$torque, main = 'torque')
boxplot(carDF$displacement, main = 'displacement')
boxplot(carDF$wt, main = 'wt')
par(mfrow=c(1,1))
carDF <- carDF[log(carDF$sell_price) < 9, ]
g1 <- ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()
g2 <- ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()
g3 <- ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()
g4 <- ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()
g5 <- ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()
g6 <- ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()
g7 <- ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()
(g1 + g2) / (g3 + g4) / (g5 + g6 + g7)
model <- lm(sell_price~., data = carDF)
summary(model)
model_forward <- lm(sell_price ~ 1, data = carDF)
model_forward <- step(model_forward, scope=list(lower=model_forward, upper=model), direction = "forward")
summary(model_forward)
model_backward <- lm(sell_price ~ 1, data = carDF)
model_backward <- step(model, scope=list(lower=model_backward, upper=model), direction = "backward")
summary(model_backward)
model_both <- lm(sell_price ~ 1, data = carDF)
model_both <- step(model_both, scope=list(lower=model_both, upper=model), direction = "both")
summary(model_both)
pairs(~ brand + type + displacement + wt + transmission_type + mielage + torque, data = carDF, pch = 21, bg = c("red", "blue", "green"))
model <- lm(sell_price ~ brand + type + displacement + wt + transmission_type + mielage + torque, data = carDF)
vif(model)
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)
plot(model)
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)
pre <- predict(model, test_modedl = carDF, interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / (dim(carDF)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(2)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "confidence")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
hist(log(carDF$sell_price))
qqnorm(log(carDF$sell_price))
hist(log(carDF$sell_price))
qqnorm(log(carDF$sell_price))
pre <- predict(model, test_modedl = carDF, interval = "predict")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / (dim(carDF)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)
pre <- predict(model, test_modedl = carDF, interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, carDF$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / (dim(carDF)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(2)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(3)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sum(pre$Success=="TRUE")/dim(pre)[1]
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
set.seed(10)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(11)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(18)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sum(pre$Success=="TRUE")/dim(pre)[1]
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / (dim(test_df)[1] - 1))
sqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / (dim(carDF)[1] - 1))
boxplot(log(carDF$sell_price), main = 'sell_price')
hist(log(carDF$sell_price))
qqnorm(log(carDF$sell_price))
set.seed(99)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
### 4-2-1 성공한 비율을 계산하여 회귀모형의 예측률을 계산
- RMSE값(평균 제곱근 오차): <span style='background-color: #fff5b1'>513.4362</span>
```{r}
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1])
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(99)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
pre <- predict(model, test_df[, -1], interval = "prediction")
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1])
sum(pre$Success=="TRUE")/dim(pre)[1]
set.seed(1)
test_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)
train_df <- carDF[-test_index,]
test_df <- carDF[test_index,]
model <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)
pre <- as.data.frame(pre)
pre <- cbind(pre, test_df$sell_price)
Success <- NA
pre <- cbind(pre, Success)
pre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T
pre$Success[is.na(pre$Success)] <- F
head(pre)
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1])
sum(pre$Success=="TRUE")/dim(pre)[1]
sqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1])
sum(pre$Success=="TRUE")/dim(pre)[1]
